# **栈和队列**

## **栈**

1.线性表可以分为**一般线性表**和**受限线性表**

  一般线性表可以自由删除或插入元素

  受限线性表（栈，队列）则对元素的删除和插入操作有一定限制

2.**栈****(Stack)是限定在只能在**表尾**进行插入和删除操作的线性表

  又称为后进先出的线性表（Last In First Out），简称LIFO结构

  分为基于数组的顺序栈，基于链表的链栈



**基于数组的顺序栈**
  顺序栈的结构体至少需要的参数：栈顶top,存储元素elem，栈的最大空间size；
  缺陷：需要事先确定存储空间大小
  可以改用基于链表的链栈



**基于链表的链栈**
  链栈不需要事先确定元素的个数，因为它是动态分配内存的。每次插入一个新元素时，只需分配一个新节点并将其链接到链表中。
1.入栈操作（Push）：
  1.生成新的结点
  2.新节点的直接后续指向指向当前栈顶结点
  3.栈顶指针指向新结点
2.出栈操作（Pop）：
  1.判断栈是否为空
  2.P指向栈顶结点，栈顶指针下移一位
  3.free释放结点P

**栈的应用：四则运算求值的步骤**

中缀表达式：运算符在两数之间，需要判断括号的匹配，以及加减乘除的优先级，而后缀表达式不需要
1.把中缀表达式转化为后缀表达式：
![image-20250322120439625](C:\Users\yyz20\AppData\Roaming\Typora\typora-user-images\image-20250322120439625.png)

2.把后缀表达式进行运算得出结果：
  从左到右遍历，数字直接进栈，遇到符号则两个数字出栈进行运算（栈顶元素放在运算符后），运算结果入栈继续遍历



## **队列**

1.定义：仅限在**表头删除**，**表尾插入**的线性表定容队列的特点

2.顺序队列（基于数组实现）

   定容队列：

1. **固定容量**：

    队列的容量在创建时确定，无法动态扩展。 当队列已满时，新的元素无法入队。

2. **先进先出（FIFO）**：

    队列遵循先进先出的原则，队头的元素最先出队。

3. **基于数组实现**：

    定容队列通常使用数组来存储元素，因为数组的大小是固定的。

4. **队头和队尾指针**：

   使用两个指针（`front` 和 `rear`）来分别指向队头和队尾。

   普通顺序队列：会出现假溢出问题（假溢出是指队列的尾部指针 `rear` 达到数组末尾时，即使队列的前部有空闲空间，也无法继续入队。）

   使用循环队列可以解决假溢出的问题

   循环队列：循环队列通过将数组的首尾相连，形成一个环形结构，使得队列空间可以重复利用。

   

   3.链式队列：（基于链表实现）

   特点
     1.动态分配内存
     2.基于链表实现
     3.队头队尾指针：分别指向第一个结点和最后一个结点 
     4.无容量限制

   

   4.队列的应用
     解决输入输出问题：利用队列的单向有序性，体现在队列的先进先出上

   

   

 
