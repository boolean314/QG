# **算法分析加排序**

​	**算法**：就是将输入转换为输出的一系列计算过程

*1.时间复杂度*
  一个算法中的语句执行次数称为**语句频度**或**时间频度。**记为**T(n)。**
  算法运行时间和输入规模n的关系，记为f(n).

当n -> ∞时，有T(n)/f(n)=c，则称f(n)是T(n)的同数量级函数，记作T(n) = O( f(n) )，它称为算法的渐进时间复杂度，

简称**时间复杂度**。

计算
![image-20250329110339690](C:\Users\yyz20\AppData\Roaming\Typora\typora-user-images\image-20250329110339690.png)

 *2.空间复杂度：*
    是对一个算法在运行过程中临时占用存储空间大小的一个量度，我们用 S(n) 来定义。空间复杂度比较常用的有：O(1)、O(n)、O(n²)



**排序算法分析：**

**1.冒泡排序：**两两作比较，依次向后，前小后大

**2.选择排序：**将当前需要排序位置的元素先设为最小值，遍历所有元素之后，如果有更小的就把更小的设为最小值，遍历结 束之后，把当前位置元素和最小值的元素调换位置；

**3.插入排序：**从第二个元素开始，如果比前面小，就继续和上上个比较，直到大于上一个元素（x）为止，把这个元素插入到x的后面

**4.归并排序：**核心思想是递归和合并
不断将一个子序列（包含原序列本身）拆分成近似相等的两份，直到无法再拆分。再在合回去的时候同时进行排序

**5.快速排序：**核心思想是**递归**与**划分**操作
选择一个基准数，通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小。然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以达到全部数据变成有序。

**6.计数排序：**

1. **找出待排序数组中的最大值和最小值**：首先遍历整个数组，找出数组中的最大值和最小值。
2. **创建计数数组**：创建一个计数数组，其长度为最大值与最小值的差值加1，并初始化为0。
3. **统计每个元素的出现次数**：再次遍历待排序数组，对于每个元素，在计数数组中对应的位置加1。
4. **根据计数数组排序**：根据计数数组，将元素按照其出现次数依次放入到排序后的数组中。具体做法是从计数数组的最小值位置开始，依次将每个元素按照其出现次数放入到排序后的数组中。
5. **返回排序后的数组**。

**7.基数计数排序：**
核心理念是：**“逐位比较，按位排序”**。
从个位到十位到百位
每次排序时，我们需要10个桶来存放数字，每个桶对应一个数字（0到9）
**收集结果**：按桶编号顺序（0→9）依次取出数字，得到新数组



插入(InsertSort)，归并(MergeSort) ，快排(QuickSort)(递归版)，计数(CountSort)和基数计数排序(RadixCountSort)。
